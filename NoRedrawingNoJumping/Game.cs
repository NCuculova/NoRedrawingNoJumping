using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Drawing;

namespace NoRedrawingNoJumping
{
   public  class Game
    {
       public List<Graph> levels;
       public Graph graph1, graph2, graph3, graph4, graph5, graph6, graph7, graph8, graph9, graph10, graph11, graph12;
       public int isLoad { get; set; }
       public Game() {
          
           levels = new List<Graph>();
           graph1 = new Graph();
           graph2 = new Graph();
           graph3 = new Graph();
           graph4 = new Graph();
           graph5 = new Graph();
           graph6 = new Graph();
           graph7 = new Graph();
           graph8 = new Graph();
           graph9 = new Graph();
           graph10 = new Graph();
           graph11 = new Graph();
           graph12 = new Graph();

           graph1.nodes = new List<Node>();
           graph1.nodes.Add(new Node(70, 70));
           graph1.nodes.Add(new Node(200, 70));
           graph1.nodes.Add(new Node(70, 200));
           graph1.nodes.Add(new Node(200, 200));
           graph1.numNodes = graph1.nodes.Count;
           graph1.edges = new List<Edge>();
           graph1.edges.Add(new Edge(graph1.nodes[0], graph1.nodes[3]));
           graph1.edges.Add(new Edge(graph1.nodes[0], graph1.nodes[2]));
           graph1.edges.Add(new Edge(graph1.nodes[1], graph1.nodes[2]));
           graph1.edges.Add(new Edge(graph1.nodes[1], graph1.nodes[3]));
           graph1.edges.Add(new Edge(graph1.nodes[2], graph1.nodes[3]));

           graph2.nodes = new List<Node>();
           graph2.nodes.Add(new Node(70, 70));
           graph2.nodes.Add(new Node(200, 70));
           graph2.nodes.Add(new Node(70, 200));
           graph2.nodes.Add(new Node(200, 200));
           graph2.nodes.Add(new Node(135, 20));
           graph2.numNodes = graph2.nodes.Count;
           graph2.edges = new List<Edge>();
           graph2.edges.Add(new Edge(graph2.nodes[4], graph2.nodes[0]));
           graph2.edges.Add(new Edge(graph2.nodes[4], graph2.nodes[1]));
           graph2.edges.Add(new Edge(graph2.nodes[0], graph2.nodes[1]));
           graph2.edges.Add(new Edge(graph2.nodes[0], graph2.nodes[2]));
           graph2.edges.Add(new Edge(graph2.nodes[1], graph2.nodes[2]));
           graph2.edges.Add(new Edge(graph2.nodes[2], graph2.nodes[3]));
           graph2.edges.Add(new Edge(graph2.nodes[1], graph2.nodes[3]));

           graph3.nodes = new List<Node>();
           graph3.nodes.Add(new Node(40, 70));
           graph3.nodes.Add(new Node(200, 70));
           graph3.nodes.Add(new Node(70, 200));
           graph3.nodes.Add(new Node(170, 200));
           graph3.nodes.Add(new Node(120, 20));
           graph3.numNodes = graph3.nodes.Count;
           graph3.edges = new List<Edge>();
           graph3.edges.Add(new Edge(graph3.nodes[0], graph3.nodes[1]));
           graph3.edges.Add(new Edge(graph3.nodes[1], graph3.nodes[2]));
           graph3.edges.Add(new Edge(graph3.nodes[2], graph3.nodes[4]));
           graph3.edges.Add(new Edge(graph3.nodes[4], graph3.nodes[3]));
           graph3.edges.Add(new Edge(graph3.nodes[3], graph3.nodes[0]));

           graph4.nodes = new List<Node>();
           graph4.nodes.Add(new Node(40, 70));
           graph4.nodes.Add(new Node(200, 70));
           graph4.nodes.Add(new Node(70, 200));
           graph4.nodes.Add(new Node(170, 200));
           graph4.nodes.Add(new Node(120, 20));
           graph4.numNodes = graph4.nodes.Count;
           graph4.edges = new List<Edge>();
           graph4.edges.Add(new Edge(graph4.nodes[4], graph4.nodes[0]));
           graph4.edges.Add(new Edge(graph4.nodes[4], graph4.nodes[1]));
           graph4.edges.Add(new Edge(graph4.nodes[0], graph4.nodes[1]));
           graph4.edges.Add(new Edge(graph4.nodes[4], graph4.nodes[2]));
           graph4.edges.Add(new Edge(graph4.nodes[4], graph4.nodes[3]));
           graph4.edges.Add(new Edge(graph4.nodes[2], graph4.nodes[3]));

           graph5.nodes = new List<Node>();
           graph5.nodes.Add(new Node(50, 110));
           graph5.nodes.Add(new Node(190, 110));
           graph5.nodes.Add(new Node(100, 200));
           graph5.nodes.Add(new Node(140, 200));
           graph5.nodes.Add(new Node(100, 20));
           graph5.nodes.Add(new Node(140, 20));
           graph5.nodes.Add(new Node(120, 110));
           graph5.numNodes = graph5.nodes.Count;
           graph5.edges = new List<Edge>();
           graph5.edges.Add(new Edge(graph5.nodes[0], graph5.nodes[4]));
           graph5.edges.Add(new Edge(graph5.nodes[4], graph5.nodes[6]));
           graph5.edges.Add(new Edge(graph5.nodes[4], graph5.nodes[1]));
           graph5.edges.Add(new Edge(graph5.nodes[4], graph5.nodes[5]));
           graph5.edges.Add(new Edge(graph5.nodes[5], graph5.nodes[1]));
           graph5.edges.Add(new Edge(graph5.nodes[5], graph5.nodes[6]));
           graph5.edges.Add(new Edge(graph5.nodes[6], graph5.nodes[0]));
           graph5.edges.Add(new Edge(graph5.nodes[6], graph5.nodes[1]));
           graph5.edges.Add(new Edge(graph5.nodes[1], graph5.nodes[3]));
           graph5.edges.Add(new Edge(graph5.nodes[3], graph5.nodes[6]));
           graph5.edges.Add(new Edge(graph5.nodes[3], graph5.nodes[2]));
           graph5.edges.Add(new Edge(graph5.nodes[2], graph5.nodes[6]));
           graph5.edges.Add(new Edge(graph5.nodes[3], graph5.nodes[0]));
           graph5.edges.Add(new Edge(graph5.nodes[0], graph5.nodes[2]));

           graph6.nodes = new List<Node>();
           graph6.nodes.Add(new Node(40, 40));
           graph6.nodes.Add(new Node(40, 200));
           graph6.nodes.Add(new Node(120, 40));
           graph6.nodes.Add(new Node(120, 200));
           graph6.nodes.Add(new Node(120, 60));
           graph6.nodes.Add(new Node(120, 180));
           graph6.nodes.Add(new Node(200, 40));
           graph6.nodes.Add(new Node(200, 200));
           graph6.nodes.Add(new Node(60, 120));
           graph6.nodes.Add(new Node(180, 120));
           graph6.numNodes = graph6.nodes.Count;
           graph6.edges = new List<Edge>();
           graph6.edges.Add(new Edge(graph6.nodes[0], graph6.nodes[1]));
           graph6.edges.Add(new Edge(graph6.nodes[0], graph6.nodes[2]));
           graph6.edges.Add(new Edge(graph6.nodes[2], graph6.nodes[6]));
           graph6.edges.Add(new Edge(graph6.nodes[2], graph6.nodes[4]));
           graph6.edges.Add(new Edge(graph6.nodes[6], graph6.nodes[7]));
           graph6.edges.Add(new Edge(graph6.nodes[4], graph6.nodes[8]));
           graph6.edges.Add(new Edge(graph6.nodes[8], graph6.nodes[5]));
           graph6.edges.Add(new Edge(graph6.nodes[4], graph6.nodes[9]));
           graph6.edges.Add(new Edge(graph6.nodes[5], graph6.nodes[9]));
           graph6.edges.Add(new Edge(graph6.nodes[1], graph6.nodes[3]));
           graph6.edges.Add(new Edge(graph6.nodes[3], graph6.nodes[7]));
           graph6.edges.Add(new Edge(graph6.nodes[5], graph6.nodes[3]));
           graph6.edges.Add(new Edge(graph6.nodes[4], graph6.nodes[5]));

           graph7.nodes = new List<Node>();
           graph7.nodes.Add(new Node(140, 40));
           graph7.nodes.Add(new Node(120, 90));
           graph7.nodes.Add(new Node(160, 90));
           graph7.nodes.Add(new Node(120, 140));
           graph7.nodes.Add(new Node(160, 140));
           graph7.nodes.Add(new Node(80, 140));
           graph7.nodes.Add(new Node(200, 140));
           graph7.nodes.Add(new Node(120, 190));
           graph7.nodes.Add(new Node(160, 190));
           graph7.nodes.Add(new Node(140, 240));
           graph7.numNodes = graph7.nodes.Count;
           graph7.edges = new List<Edge>();
           graph7.edges.Add(new Edge(graph7.nodes[0], graph7.nodes[1]));
           graph7.edges.Add(new Edge(graph7.nodes[0], graph7.nodes[2]));
           graph7.edges.Add(new Edge(graph7.nodes[1], graph7.nodes[2]));
           graph7.edges.Add(new Edge(graph7.nodes[1], graph7.nodes[5]));
           graph7.edges.Add(new Edge(graph7.nodes[1], graph7.nodes[3]));
           graph7.edges.Add(new Edge(graph7.nodes[2], graph7.nodes[4]));
           graph7.edges.Add(new Edge(graph7.nodes[2], graph7.nodes[6]));
           graph7.edges.Add(new Edge(graph7.nodes[5], graph7.nodes[3]));
           graph7.edges.Add(new Edge(graph7.nodes[3], graph7.nodes[4]));
           graph7.edges.Add(new Edge(graph7.nodes[4], graph7.nodes[6]));
           graph7.edges.Add(new Edge(graph7.nodes[6], graph7.nodes[8]));
           graph7.edges.Add(new Edge(graph7.nodes[8], graph7.nodes[4]));
           graph7.edges.Add(new Edge(graph7.nodes[8], graph7.nodes[7]));
           graph7.edges.Add(new Edge(graph7.nodes[7], graph7.nodes[3]));
           graph7.edges.Add(new Edge(graph7.nodes[7], graph7.nodes[5]));
           graph7.edges.Add(new Edge(graph7.nodes[7], graph7.nodes[9]));
           graph7.edges.Add(new Edge(graph7.nodes[8], graph7.nodes[9]));

           graph8.nodes = new List<Node>();
           graph8.nodes.Add(new Node(180, 40));
           graph8.nodes.Add(new Node(230, 60));
           graph8.nodes.Add(new Node(40, 70));
           graph8.nodes.Add(new Node(40, 100));
           graph8.nodes.Add(new Node(70, 100));
           graph8.nodes.Add(new Node(130, 100));
           graph8.nodes.Add(new Node(230, 100));
           graph8.nodes.Add(new Node(100, 160));
           graph8.nodes.Add(new Node(200, 160));
           graph8.nodes.Add(new Node(70, 240));
           graph8.nodes.Add(new Node(100, 240));
           graph8.nodes.Add(new Node(200, 240));
           graph8.nodes.Add(new Node(230, 240));
           graph8.numNodes = graph8.nodes.Count;
           graph8.edges = new List<Edge>();
           graph8.edges.Add(new Edge(graph8.nodes[0], graph8.nodes[1]));
           graph8.edges.Add(new Edge(graph8.nodes[1], graph8.nodes[5]));
           graph8.edges.Add(new Edge(graph8.nodes[5], graph8.nodes[0]));
           graph8.edges.Add(new Edge(graph8.nodes[5], graph8.nodes[4]));
           graph8.edges.Add(new Edge(graph8.nodes[4], graph8.nodes[2]));
           graph8.edges.Add(new Edge(graph8.nodes[2], graph8.nodes[3]));
           graph8.edges.Add(new Edge(graph8.nodes[3], graph8.nodes[4]));
           graph8.edges.Add(new Edge(graph8.nodes[4], graph8.nodes[7]));
           graph8.edges.Add(new Edge(graph8.nodes[7], graph8.nodes[10]));
           graph8.edges.Add(new Edge(graph8.nodes[10], graph8.nodes[9]));
           graph8.edges.Add(new Edge(graph8.nodes[9], graph8.nodes[7]));
           graph8.edges.Add(new Edge(graph8.nodes[7], graph8.nodes[8]));
           graph8.edges.Add(new Edge(graph8.nodes[8], graph8.nodes[11]));
           graph8.edges.Add(new Edge(graph8.nodes[11], graph8.nodes[12]));
           graph8.edges.Add(new Edge(graph8.nodes[12], graph8.nodes[8]));
           graph8.edges.Add(new Edge(graph8.nodes[8], graph8.nodes[6]));
           graph8.edges.Add(new Edge(graph8.nodes[6], graph8.nodes[5]));
           graph8.edges.Add(new Edge(graph8.nodes[8], graph8.nodes[4]));

           graph9.nodes = new List<Node>();
           graph9.nodes.Add(new Node(40, 90));
           graph9.nodes.Add(new Node(70, 60));
           graph9.nodes.Add(new Node(100, 60));
           graph9.nodes.Add(new Node(130, 90));
           graph9.nodes.Add(new Node(160, 60));
           graph9.nodes.Add(new Node(190, 60));
           graph9.nodes.Add(new Node(220, 90));
           graph9.nodes.Add(new Node(100, 150));
           graph9.nodes.Add(new Node(160, 150));
           graph9.nodes.Add(new Node(40, 170));
           graph9.nodes.Add(new Node(220, 170));
           graph9.nodes.Add(new Node(100, 215));
           graph9.nodes.Add(new Node(130, 240));
           graph9.numNodes = graph9.nodes.Count;
           graph9.edges = new List<Edge>();
           graph9.edges.Add(new Edge(graph9.nodes[0], graph9.nodes[1]));
           graph9.edges.Add(new Edge(graph9.nodes[1], graph9.nodes[2]));
           graph9.edges.Add(new Edge(graph9.nodes[2], graph9.nodes[3]));
           graph9.edges.Add(new Edge(graph9.nodes[3], graph9.nodes[4]));
           graph9.edges.Add(new Edge(graph9.nodes[4], graph9.nodes[5]));
           graph9.edges.Add(new Edge(graph9.nodes[5], graph9.nodes[6]));
           graph9.edges.Add(new Edge(graph9.nodes[6], graph9.nodes[10]));
           graph9.edges.Add(new Edge(graph9.nodes[10], graph9.nodes[12]));
           graph9.edges.Add(new Edge(graph9.nodes[12], graph9.nodes[11]));
           graph9.edges.Add(new Edge(graph9.nodes[11], graph9.nodes[9]));
           graph9.edges.Add(new Edge(graph9.nodes[9], graph9.nodes[0]));
           graph9.edges.Add(new Edge(graph9.nodes[5], graph9.nodes[7]));
           graph9.edges.Add(new Edge(graph9.nodes[7], graph9.nodes[8]));
           graph9.edges.Add(new Edge(graph9.nodes[8], graph9.nodes[11]));


           graph10.nodes = new List<Node>();
           graph10.nodes.Add(new Node(115, 40));
           graph10.nodes.Add(new Node(30, 70));
           graph10.nodes.Add(new Node(85, 70));
           graph10.nodes.Add(new Node(145, 70));
           graph10.nodes.Add(new Node(200, 70));
           graph10.nodes.Add(new Node(55, 130));
           graph10.nodes.Add(new Node(165, 130));
           graph10.nodes.Add(new Node(115, 160));
           graph10.nodes.Add(new Node(55, 190));
           graph10.nodes.Add(new Node(165, 190));
           graph10.numNodes = graph10.nodes.Count;
           graph10.edges = new List<Edge>();
           graph10.edges.Add(new Edge(graph10.nodes[0], graph10.nodes[2]));
           graph10.edges.Add(new Edge(graph10.nodes[2], graph10.nodes[3]));
           graph10.edges.Add(new Edge(graph10.nodes[3], graph10.nodes[0]));
           graph10.edges.Add(new Edge(graph10.nodes[2], graph10.nodes[1]));
           graph10.edges.Add(new Edge(graph10.nodes[1], graph10.nodes[5]));
           graph10.edges.Add(new Edge(graph10.nodes[5], graph10.nodes[3]));
           graph10.edges.Add(new Edge(graph10.nodes[3], graph10.nodes[4]));
           graph10.edges.Add(new Edge(graph10.nodes[4], graph10.nodes[6]));
           graph10.edges.Add(new Edge(graph10.nodes[6], graph10.nodes[2]));
           graph10.edges.Add(new Edge(graph10.nodes[2], graph10.nodes[7]));
           graph10.edges.Add(new Edge(graph10.nodes[7], graph10.nodes[3]));
           graph10.edges.Add(new Edge(graph10.nodes[5], graph10.nodes[6]));
           graph10.edges.Add(new Edge(graph10.nodes[6], graph10.nodes[9]));
           graph10.edges.Add(new Edge(graph10.nodes[9], graph10.nodes[7]));
           graph10.edges.Add(new Edge(graph10.nodes[7], graph10.nodes[8]));
           graph10.edges.Add(new Edge(graph10.nodes[8], graph10.nodes[5]));

           graph11.nodes = new List<Node>();
           graph11.nodes.Add(new Node(160, 20));
           graph11.nodes.Add(new Node(100, 80));
           graph11.nodes.Add(new Node(220, 80));
           graph11.nodes.Add(new Node(40, 130));
           graph11.nodes.Add(new Node(100, 130));
           graph11.nodes.Add(new Node(160, 130));
           graph11.nodes.Add(new Node(220, 130));
           graph11.nodes.Add(new Node(40, 180));
           graph11.nodes.Add(new Node(160, 180));
           graph11.nodes.Add(new Node(100, 240));
           graph11.numNodes = graph11.nodes.Count;
           graph11.edges = new List<Edge>();
           graph11.edges.Add(new Edge(graph11.nodes[0], graph11.nodes[1]));
           graph11.edges.Add(new Edge(graph11.nodes[1], graph11.nodes[2]));
           graph11.edges.Add(new Edge(graph11.nodes[2], graph11.nodes[0]));
           graph11.edges.Add(new Edge(graph11.nodes[2], graph11.nodes[6]));
           graph11.edges.Add(new Edge(graph11.nodes[6], graph11.nodes[5]));
           graph11.edges.Add(new Edge(graph11.nodes[5], graph11.nodes[4]));
           graph11.edges.Add(new Edge(graph11.nodes[3], graph11.nodes[4]));
           graph11.edges.Add(new Edge(graph11.nodes[4], graph11.nodes[2]));
           graph11.edges.Add(new Edge(graph11.nodes[4], graph11.nodes[1]));
           graph11.edges.Add(new Edge(graph11.nodes[3], graph11.nodes[7]));
           graph11.edges.Add(new Edge(graph11.nodes[7], graph11.nodes[5]));
           graph11.edges.Add(new Edge(graph11.nodes[5], graph11.nodes[8]));
           graph11.edges.Add(new Edge(graph11.nodes[8], graph11.nodes[7]));
           graph11.edges.Add(new Edge(graph11.nodes[7], graph11.nodes[9]));
           graph11.edges.Add(new Edge(graph11.nodes[9], graph11.nodes[8]));

           graph12.nodes = new List<Node>();
           graph12.nodes.Add(new Node(30, 40));
           graph12.nodes.Add(new Node(90, 40));
           graph12.nodes.Add(new Node(150, 40));
           graph12.nodes.Add(new Node(30, 100));
           graph12.nodes.Add(new Node(150, 100));
           graph12.nodes.Add(new Node(30, 160));
           graph12.nodes.Add(new Node(90, 160));
           graph12.nodes.Add(new Node(150, 160));
           graph12.nodes.Add(new Node(30, 200));
           graph12.nodes.Add(new Node(90, 200));
           graph12.nodes.Add(new Node(150, 200));
           graph12.numNodes = graph12.nodes.Count;
           graph12.edges = new List<Edge>();
           graph12.edges.Add(new Edge(graph12.nodes[0], graph12.nodes[1]));
           graph12.edges.Add(new Edge(graph12.nodes[1], graph12.nodes[2]));
           graph12.edges.Add(new Edge(graph12.nodes[0], graph12.nodes[3]));
           graph12.edges.Add(new Edge(graph12.nodes[2], graph12.nodes[4]));
           graph12.edges.Add(new Edge(graph12.nodes[1], graph12.nodes[3]));
           graph12.edges.Add(new Edge(graph12.nodes[1], graph12.nodes[4]));
           graph12.edges.Add(new Edge(graph12.nodes[3], graph12.nodes[5]));
           graph12.edges.Add(new Edge(graph12.nodes[3], graph12.nodes[6]));
           graph12.edges.Add(new Edge(graph12.nodes[5], graph12.nodes[6]));
           graph12.edges.Add(new Edge(graph12.nodes[4], graph12.nodes[6]));
           graph12.edges.Add(new Edge(graph12.nodes[4], graph12.nodes[7]));
           graph12.edges.Add(new Edge(graph12.nodes[6], graph12.nodes[7]));
           graph12.edges.Add(new Edge(graph12.nodes[7], graph12.nodes[10]));
           graph12.edges.Add(new Edge(graph12.nodes[5], graph12.nodes[8]));
           graph12.edges.Add(new Edge(graph12.nodes[8], graph12.nodes[9]));
           graph12.edges.Add(new Edge(graph12.nodes[9], graph12.nodes[10]));
           graph12.edges.Add(new Edge(graph12.nodes[7], graph12.nodes[9]));
           graph12.edges.Add(new Edge(graph12.nodes[6], graph12.nodes[10]));
           graph12.edges.Add(new Edge(graph12.nodes[5], graph12.nodes[9]));
           graph12.edges.Add(new Edge(graph12.nodes[6], graph12.nodes[8]));


           levels.Add(graph1);
           levels.Add(graph2);
           levels.Add(graph3);
           levels.Add(graph4);
           levels.Add(graph5);
           levels.Add(graph6);
           levels.Add(graph7);
           levels.Add(graph8);
           levels.Add(graph9);
           levels.Add(graph10);
           levels.Add(graph11);
           levels.Add(graph12);

       }

    }
}
